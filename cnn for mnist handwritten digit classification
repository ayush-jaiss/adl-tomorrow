import tensorflow as tf
import numpy as np
import matplotlib.pyplot as plt

mnist = tf.keras.datasets.mnist
(x_train, y_train), (x_test, y_test) = mnist.load_data()

np.set_printoptions(threshold=np.inf, linewidth=280)
print(x_train[0])
plt.imshow(x_train[0])

print(x_train. shape)
x_train=x_train.reshape(60000, 28, 28, 1)
x_train=x_train / 255.@
x_test = x_test.reshape(10@00, 28, 28, 1)
x_test=x_test/255.0
print(x_train. shape)


model = tf.keras.models.Sequential([
tf. keras.layers.Conv2D(32, (3,3), activation='relu', input_shape=(28, 28, 1)),
tf.keras.layers.MaxPooling2D(2, 2),
tf.keras.layers.Flatten(),
tf. keras.layers.Dense(128, activation='relu'),
tf.keras.layers.Dense(1@, activation='softmax')
])

model.compile(optimizer="adam', loss='sparse_categorical_crossentropy', metrics=['accuracy' ])

history = model. fit(x_train,y_train, epochs=10)

plt.plot(history.history[â€˜loss'])
model. summary ( )
